// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`injectDependencies should add globals 1`] = `
"require('source-map-support').install()
// snippet dependencies

let theAnswer = 42;

const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should add globals and dependencies 1`] = `
"require('source-map-support').install()
// snippet dependencies
const _ = require('lodash');
let theAnswer = 42;

const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should add requires with no declaration when the name is missing 1`] = `
"require('source-map-support').install()
// snippet dependencies
require('./for-the-side-effects');
require('es6-promise');


const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should add source maps but no dependencies 1`] = `
"require('source-map-support').install()
// snippet dependencies



const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should interpolate functions, arrays, objets and strings properly 1`] = `
"require('source-map-support').install()
// snippet dependencies

let add = (a, b) => a + b;
let message = 'hello world';
let foo = { foo: 'bar' };
let fruits = ['orange', 'apple'];

const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should not change snippet indentation 1`] = `
"require('source-map-support').install()
// snippet dependencies



const foo = {
  bar: \\"bar\\"
};

Promise.resolve(foo)
  .then(({ bar }) => bar)
  .then(bar => {
    console.log(bar);
  });"
`;

exports[`injectDependencies should not change snippet indentation 2`] = `
"require('source-map-support').install()
// snippet dependencies
const _ = require('lodash');
const lib = require('./lib');


const foo = {
  bar: \\"bar\\"
};

Promise.resolve(foo)
  .then(({ bar }) => bar)
  .then(bar => {
    console.log(bar);
  });"
`;

exports[`injectDependencies should prepend requires with variable declarations to the snippet code 1`] = `
"require('source-map-support').install()
// snippet dependencies
const _ = require('lodash');


const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should prepend requires with variable declarations to the snippet code 2`] = `
"require('source-map-support').install()
// snippet dependencies
const _ = require('lodash');
const trae = require('trae');


const answer = 42

console.log(answer)"
`;

exports[`injectDependencies should work for local dependencies 1`] = `
"require('source-map-support').install()
// snippet dependencies
const lib = require('./lib');
const bar = require('../foo/bar');


const answer = 42

console.log(answer)"
`;
